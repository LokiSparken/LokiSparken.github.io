<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>【UE4】花式导入 DLL（一）</title>
      <link href="/2020/10/13/%E3%80%90UE4%E3%80%91%E8%8A%B1%E5%BC%8F%E5%AF%BC%E5%85%A5%20DLL%EF%BC%88%E4%B8%80%EF%BC%89/"/>
      <url>/2020/10/13/%E3%80%90UE4%E3%80%91%E8%8A%B1%E5%BC%8F%E5%AF%BC%E5%85%A5%20DLL%EF%BC%88%E4%B8%80%EF%BC%89/</url>
      
        <content type="html"><![CDATA[<h2 id="一、配置环境"><a href="#一、配置环境" class="headerlink" title="一、配置环境"></a>一、配置环境</h2><ul><li>Windows 10</li><li>Unreal Engine 4.24</li><li>Visual Studio 2017</li></ul><a id="more"></a><h2 id="二、创建一个简单的-DLL-库"><a href="#二、创建一个简单的-DLL-库" class="headerlink" title="二、创建一个简单的 DLL 库"></a>二、创建一个简单的 DLL 库</h2><ul><li><p>VS2017 新建项目 <code>Windows 控制台应用程序 ConsoleApplication - DLLProducer1</code></p></li><li><p>修改项目配置属性</p><ul><li>平台：<code>x64</code></li><li>项目 - 属性 - 配置属性 - 常规 - 配置类型：<code>dll</code></li></ul></li><li><p>创建头文件、源文件 <code>DLLProducer1.h</code>、<code>DLLProducer1.cpp</code></p>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .h</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">pragma</span> once</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">define</span> DLL_EXPORT __declspec(dllexport)</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line"><span class="keyword">extern</span> <span class="string">"C"</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br><span class="line"><span class="function"><span class="keyword">float</span> DLL_EXPORT <span class="title">getCircleArea</span><span class="params">(<span class="keyword">float</span> radius)</span></span>;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">ifdef</span> __cplusplus</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">#<span class="meta-keyword">endif</span></span></span><br></pre></td></tr></table></figure>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// .cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"DLLProducer1.h"</span></span></span><br><span class="line"><span class="function"><span class="keyword">float</span> DLL_EXPORT <span class="title">getCircleArea</span><span class="params">(<span class="keyword">float</span> radius)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> (<span class="number">3.14</span> * (radius * radius));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>F7 编译，在 x64 目录下得到 <code>.dll</code></p></li></ul><h2 id="三、在-UE-4-24-中导入（1）蓝图可调用"><a href="#三、在-UE-4-24-中导入（1）蓝图可调用" class="headerlink" title="三、在 UE 4.24 中导入（1）蓝图可调用"></a>三、在 UE 4.24 中导入（1）蓝图可调用</h2><ul><li>将 <code>.dll</code> 加入到 UE4 工程<ul><li>在 UE4 项目文件根目录下新建文件夹 Plugins</li><li>复制 <code>.dll</code> 到 Plugins</li></ul></li><li>创建UE4项目的新C++类 <code>DLLInvokeTest</code><ul><li>New C++ Class</li><li>父类 <code>Blueprint Function Library</code></li></ul></li><li>头文件  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DLLInvokeTest.h</span></span><br><span class="line">UCLASS()</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DLLTEST_API</span> <span class="title">UDLLTest</span> :</span> <span class="keyword">public</span> UBlueprintFunctionLibrary</span><br><span class="line">&#123;</span><br><span class="line">GENERATED_BODY()</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">UDLLTest();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明加载 DLL 的函数</span></span><br><span class="line">UFUNCTION(BlueprintCallable, Category = <span class="string">"MyDllInvokeTest"</span>)</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">importDll</span><span class="params">(FString folder, FString name)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明导入 DLL 库中具体函数的方法</span></span><br><span class="line">UFUNCTION(BlueprintCallable, Category = <span class="string">"MyDllInvokeTest"</span>)</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">bool</span> <span class="title">importMethodGetCircleAreaFromDll</span><span class="params">()</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 声明从 DLL 引入函数后的调用接口</span></span><br><span class="line">UFUNCTION(BlueprintCallable, Category = <span class="string">"MyDllInvokeTest"</span>)</span><br><span class="line"><span class="function"><span class="keyword">static</span> <span class="keyword">float</span> <span class="title">getCircleArea</span><span class="params">(<span class="keyword">float</span> radius)</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li>源文件  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DLLInvokeTest.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"DLLInvokeTest.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Runtime/Core/Public/Misc/Paths.h"</span><span class="comment">// using FPaths</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Runtime/Core/Public/HoloLens/HoloLensPlatformProcess.h"</span><span class="comment">// using FPlatformProcess</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 1. 声明用于存储相应 DLL 函数的方法</span></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">float</span><span class="params">(*_getCircleArea)</span><span class="params">(<span class="keyword">float</span> radius)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 2. 加载 DLL 库</span></span><br><span class="line"><span class="keyword">void</span> *dllHandle;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">UDLLTest::importDll</span><span class="params">(FString folder, FString name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">// *FPaths::GamePluginsDir() 为项目插件目录，若使用引擎目录则为EnginePluginsDir()</span></span><br><span class="line">FString filePath = *FPaths::GamePluginsDir() + folder + <span class="string">"/"</span> + name;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (FPaths::FileExists(filePath))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 获取DLL库</span></span><br><span class="line">dllHandle = FPlatformProcess::GetDllHandle(*filePath);</span><br><span class="line"><span class="keyword">if</span> (dllHandle != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 3. 从 DLL 库中导入具体的函数</span></span><br><span class="line">_getCircleArea m_getCircleAreaFromDll;   <span class="comment">// 创建实例</span></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">UDLLTest::importMethodGetCircleAreaFromDll</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (dllHandle != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">m_getCircleAreaFromDll = <span class="literal">NULL</span>;</span><br><span class="line">FString procName = <span class="string">"getCircleArea"</span>;<span class="comment">// DLL 库中的函数名，严格对应</span></span><br><span class="line">m_getCircleAreaFromDll = (_getCircleArea)FPlatformProcess::GetDllExport(dllHandle, *procName);</span><br><span class="line"><span class="keyword">if</span> (m_getCircleAreaFromDll != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 4. 供调用的接口</span></span><br><span class="line"><span class="function"><span class="keyword">float</span> <span class="title">UDLLTest::getCircleArea</span><span class="params">(<span class="keyword">float</span> radius)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (m_getCircleAreaFromDll != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">float</span> out = m_getCircleAreaFromDll(radius); <span class="comment">// 调用</span></span><br><span class="line">UE_LOG(LogTemp, Warning, TEXT(<span class="string">"Successly call method &lt;getCircleAreaFromDll&gt; from DLL library."</span>));</span><br><span class="line"><span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line">UE_LOG(LogTemp, Warning, TEXT(<span class="string">"Failed to call method &lt;getCircleAreaFromDll&gt; from DLL library."</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">1.0f</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 在该类构造期间就加载DLL库及相关函数</span></span><br><span class="line">UDLLTest::UDLLTest()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 调用 DLL 库的加载函数</span></span><br><span class="line"><span class="keyword">if</span> (importDll(<span class="string">"DLL"</span>, <span class="string">"DLLProducer1.dll"</span>))</span><br><span class="line">&#123;</span><br><span class="line">UE_LOG(LogTemp, Warning, TEXT(<span class="string">"DLL load ok."</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">UE_LOG(LogTemp, Warning, TEXT(<span class="string">"DLL load failed."</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 调用函数导入</span></span><br><span class="line"><span class="keyword">if</span> (importMethodGetCircleAreaFromDll())</span><br><span class="line">&#123;</span><br><span class="line">UE_LOG(LogTemp, Warning, TEXT(<span class="string">"method &lt;getCircleArea&gt; load ok."</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">UE_LOG(LogTemp, Warning, TEXT(<span class="string">"method &lt;getCircleArea&gt; load failed."</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li>新建蓝图，在 Event Graph 中即可调用 <code>getCircleArea()</code> 函数</li></ul><blockquote><p><i class="fa fa-question fa-x"></i> 问题：</p><ul><li>可能和 UE4 耦合度略高，测自定义类型的时候 UE4 总会报错提示需要其为 UE4 类型。  </li><li>（当然后来发现实际上也可能是库的依赖问题导致加载 DLL 就失败，只是 UE4 报错总会口胡（逃</li></ul></blockquote><h2 id="四、在-UE-4-24-中导入（2）纯净-C-版"><a href="#四、在-UE-4-24-中导入（2）纯净-C-版" class="headerlink" title="四、在 UE 4.24 中导入（2）纯净 C++ 版"></a>四、在 UE 4.24 中导入（2）纯净 C++ 版</h2><blockquote><p><i class="fa fa-exclamation fa-x"></i> 注意：</p><ul><li>以下可忽略，与（1）基本相同，只是把继承自 UE4 类的相关部分剥离</li></ul></blockquote><ul><li><p>将 <code>.dll</code> 加入到 UE4 工程</p><ul><li>在 UE4 项目文件根目录下新建文件夹 Plugins</li><li>复制 <code>.dll</code> 到 Plugins</li></ul></li><li><p>创建UE4项目的新C++类 <code>DLLImporter</code></p><ul><li>New C++ Class</li><li>父类 <code>None</code></li></ul></li><li><p>头文件</p>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DLLImporter.h</span></span><br><span class="line"><span class="function"><span class="keyword">typedef</span> <span class="title">double</span><span class="params">(*_getCircleAreaFromDll)</span><span class="params">(<span class="keyword">double</span> radius)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DLLTEST_API</span> <span class="title">DLLImporter</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="keyword">private</span>:</span><br><span class="line"><span class="keyword">void</span> *dllHandle, *dllHandleForPackage;</span><br><span class="line">_getCircleAreaFromDll m_getCircleAreaFromDll;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">DLLImporter();</span><br><span class="line">~DLLImporter();</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">importDLL</span><span class="params">(FString folder, FString name)</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">importDLLForPackage</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">importMethodGetCircleAreaFromDll</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">getCircleArea</span><span class="params">(<span class="keyword">double</span> radius)</span></span>;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></li><li><p>源文件</p>  <figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DLLImporter.cpp</span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"DLLImporter.h"</span></span></span><br><span class="line"><span class="meta">#<span class="meta-keyword">include</span> <span class="meta-string">"Runtime/Engine/Public/EngineGlobals.h"</span><span class="comment">// using GEngine</span></span></span><br><span class="line"></span><br><span class="line">DLLImporter::DLLImporter()</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 加载</span></span><br><span class="line"><span class="keyword">if</span> (importDLL(<span class="string">"DLL"</span>, <span class="string">"DLLProducer1.dll"</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 导入</span></span><br><span class="line"><span class="keyword">if</span> (importMethodGetCircleAreaFromDll())</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 调用</span></span><br><span class="line"><span class="keyword">double</span> ans = getCircleArea(<span class="number">1.0</span>);</span><br><span class="line">UE_LOG(LogTemp, Warning, TEXT(<span class="string">"method calling result: %f"</span>), ans);</span><br><span class="line">UE_LOG(LogTemp, Warning, TEXT(<span class="string">" "</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">UE_LOG(LogTemp, Warning, TEXT(<span class="string">"method &lt;getCircleArea&gt; load failed."</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">UE_LOG(LogTemp, Warning, TEXT(<span class="string">"DLL &lt;DLLProducer1.dll&gt; load failed."</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">DLLImporter::importDLL</span><span class="params">(FString folder, FString name)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FString filePath = *FPaths::GamePluginsDir() + folder + <span class="string">"/"</span> + name;</span><br><span class="line"><span class="keyword">if</span> (FPaths::FileExists(filePath))</span><br><span class="line">&#123;</span><br><span class="line">dllHandle = FPlatformProcess::GetDllHandle(*filePath);</span><br><span class="line"><span class="keyword">if</span> (dllHandle != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">DLLImporter::importMethodGetCircleAreaFromDll</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (dllHandle != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">m_getCircleAreaFromDll = <span class="literal">NULL</span>;</span><br><span class="line">FString procName = <span class="string">"getCircleArea"</span>;</span><br><span class="line">m_getCircleAreaFromDll = (_getCircleAreaFromDll)FPlatformProcess::GetDllExport(dllHandle, *procName);</span><br><span class="line"><span class="keyword">if</span> (m_getCircleAreaFromDll != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">double</span> <span class="title">DLLImporter::getCircleArea</span><span class="params">(<span class="keyword">double</span> radius)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (m_getCircleAreaFromDll != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">double</span> out = m_getCircleAreaFromDll(radius);</span><br><span class="line">UE_LOG(LogTemp, Warning, TEXT(<span class="string">"Successly call method &lt;getCircleArea&gt; from DLL library."</span>));</span><br><span class="line"><span class="keyword">return</span> out;</span><br><span class="line">&#125;</span><br><span class="line">UE_LOG(LogTemp, Warning, TEXT(<span class="string">"m_getCircleAreaFromDll NULL! Failed to call method &lt;getCircleArea&gt; from DLL library."</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">1.0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
      
      
      <categories>
          
          <category> Unreal Engine </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UE4 </tag>
            
            <tag> configuration </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>【UE4】Pixel Streaming</title>
      <link href="/2020/07/16/%E3%80%90UE4%E3%80%91Pixel-Streaming/"/>
      <url>/2020/07/16/%E3%80%90UE4%E3%80%91Pixel-Streaming/</url>
      
        <content type="html"><![CDATA[<h1 id="像素流送"><a href="#像素流送" class="headerlink" title="像素流送"></a>像素流送</h1>]]></content>
      
      
      <categories>
          
          <category> Unreal Engine </category>
          
          <category> Pixel Streaming </category>
          
      </categories>
      
      
        <tags>
            
            <tag> UE4 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>又是测试喵</title>
      <link href="/2020/07/16/Test/"/>
      <url>/2020/07/16/Test/</url>
      
        <content type="html"><![CDATA[<h1 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h1><ul><li>喵喵喵 (ฅ&gt;ω&lt;*ฅ)</li></ul><p><i class="fa fa-star fa-x fa-spin"></i></p><ul><li>略略略 </li></ul>]]></content>
      
      
      <categories>
          
          <category> Configurations </category>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> configuration </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
